#!/bin/sh 
#29f85d0e0db7d14416d428ba92d9969d#

MASTER="$(mktemp)"
PASS="$(mktemp)"
PREPARE_SSH_KEY="$(mktemp)"
PREPARE_SSH_KEY_PASS="$(mktemp)"

echo "-- decrypt ssh keys"
gpg --batch --yes --passphrase-file "$MASTER_PASS" -o "$MASTER" "/.master.asc"
gpg --batch --yes --passphrase-file "$MASTER" -d -o "$PREPARE_SSH_KEY" "$PREPARE_SSH_KEY_ASC"
gpg --batch --yes --passphrase-file "$MASTER" -d -o "$PREPARE_SSH_KEY_PASS" "$PREPARE_SSH_KEY_PASS_ASC"

echo "-- setup ssh socket"
export SSH_AUTH_SOCK="$(mktemp -u)"
export SSH_AUTH_EVAL="$(mktemp -u)"
ssh-agent -t 3600 -a "$SSH_AUTH_SOCK" > "$SSH_AUTH_EVAL"
sshpass -v -P Enter -f "$PREPARE_SSH_KEY_PASS" timeout 3 ssh-add "$PREPARE_SSH_KEY"

if [ "$CI_JOB_NAME" = "integration" ]
then
    echo "-- download dependecies"
    mkdir -p ~/.ssh
    ssh-keyscan "$CI_SERVER_HOST" >> ~/.ssh/known_hosts

    tmp=$(mktemp -d)
    cd "$tmp"
        git clone --verbose "git@$CI_SERVER_HOST:core/library/test/sandbox.git" .
        rsync --verbose --cvs-exclude -lr \
            "$tmp/atomyze-bft-2.3-devel/" \
            "$SRC_DIR/test/env/default/"
    cd "$SRC_DIR"

    # prepare ACL testing chaincode one of the strongly linked components
    tmp=$(mktemp -d)
    cd "$tmp"
        git clone --verbose "git@$CI_SERVER_HOST:core/application/on-chain/chaincode/system/acl.git" .
        git checkout "$CI_COMMIT_REF_SLUG" || echo "WARNING: '$CI_COMMIT_REF_SLUG' not found using default branch"

        # get foundation version
        module="$(grep -m 1 -E "^module " "$SRC_DIR/go.mod" | cut -d ' ' -f 2)"
        major="$(echo "$module"|sed -re 's;.*/;;')"
        [ -z "$major" ] && version="v1.0.0" || version="$major.0.0" 

        # remove unused tests
        rm -rf "test"

        # update import with current version
        find ./ -type f -name "*.go" -print0 | \
            xargs -0 sed -i -re 's;".*/foundation(/v[0-9]+)?;"'"$module"';g'

        # update go.mod
        sed -i -re 's;.*/foundation(/v[0-9]+)?.*;'"$module $version"';g' go.mod

        # update override
        echo "
replace $module => ../../../../../
       " >> go.mod
       
       
        sed -i 's/atomyzeMSP/org0/g' acl.go
        rsync --verbose --cvs-exclude -lr \
            "$tmp/" \
            "$SRC_DIR/test/chaincode/public/acl/acl/"
    cd "$SRC_DIR"
fi

export IMG_HLF_PROXY=prod-registry.cicd.prod.core.n-t.io/repository/docker/core/library/hlf-tool/hlf-proxy:master.2fe7f4ca
